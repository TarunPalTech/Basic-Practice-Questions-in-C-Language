                    Assignment – 15 
                   More on Functions
1. Write function to calculate LCM of two numbers. (TSRS)
#include<stdio.h>
int lcm(int,int);
int main()
{
    int a,b;
    printf("Enter a number:");
    scanf("%d",&a);
    printf("Enter a number:");
    scanf("%d",&b);
    printf("LCM is %d.",lcm(a,b));
    return 0;
}
int lcm(int a,int b){
    int L;
    for(L=a>b?a:b;L<=a*b;L++){
        if(L%a==0 && L%b==0)
            return L;                   
    }
}
2. Write a function to calculate HCF of two numbers. (TSRS)
#include<stdio.h>
int hcf(int,int);
int main()
{
    int a,b;
    printf("Enter a number:");
    scanf("%d",&a);
    printf("Enter a number:");
    scanf("%d",&b);
    printf("hcf is %d.",hcf(a,b));
    return 0;
}
int hcf(int a,int b){
    int L;
    for(L=a<b?a:b;L<=a*b;L--){
        if(a%L==0 && b%L==0)
            return L;                   
    }
}
3. Write a function to check whether a given number is prime or not. (TSRS)
#include<stdio.h>
int check_prime(int);
int main()
{
    int n;
    printf("Enter a number:");
    scanf("%d",&n);
    if(check_prime(n))
        printf("Number isn't prime.");
    else
        printf("Number is prime.");
    return 0;
}
int check_prime(int n){
    for(int i=2;i<=n/2;i++){
        if(n%i==0)
            return 1;
    }
    return 0;
}
4. Write a function to find the next prime number of a given number. (TSRS)
#include<stdio.h>
int check_prime(int);
int main()
{
    int n;
    printf("Enter a number:");
    scanf("%d",&n);
    printf("%d",check_prime(n));
    return 0;
}
int check_prime(int n){
    int n_1=n+1,i;
    while(n_1){
        for(i=2;i<n_1;i++)
            if(n_1%i==0)
                break;
        if(i==n_1){
            return n_1;
        }
        n_1++;
    }
    return 0;
}
5. Write a function to print first N prime numbers. (TSRN)
#include<stdio.h>
void print_prime(int);
int main()
{
    int n;
    printf("Enter a number:");
    scanf("%d",&n);
    print_prime(n);
    return 0;
}
void print_prime(int n){
    int i,flag=2;
    while(flag<n){
        for(i=2;i<n;i++)
            if(flag%i==0)
                break;
        if(i==flag){
            printf("%d ",flag);
            //break;
        }
        flag++;
    }
}
6. Write a function to print all Prime numbers between two given numbers. (TSRN)
#include<stdio.h>
void print_prime(int,int);
int main()
{
    int n,flag;
    printf("Enter first number:");
    scanf("%d",&flag);
    printf("Enter second number:");
    scanf("%d",&n);
    print_prime(flag,n);
    return 0;
}
void print_prime(int flag,int n){
    int i;
    while(flag<n){
        for(i=2;i<n;i++)
            if(flag%i==0)
                break;
        if(i==flag){
            printf("%d ",flag);
            //break;
        }
        flag++;
    }
}
7. Write a function to print first N terms of Fibonacci series. (TSRN)
#include<stdio.h>
void print_fib(int);
int main()
{
    int n;
    printf("Enter a number:");
    scanf("%d",&n);
    print_fib(n);
    return 0;
}
void print_fib(int n){
    int c,a=-1,b=1;
    for(int i=0;i<=n;i++){
        c=a+b;
        printf("%d ",c);
        a=b;
        b=c;
    }
}
8. Write a function to print PASCAL Triangle. (TSRN)
#include<stdio.h>
int factorial(int);
int combination(int,int);
void pattern(int lines){
    int i,j,k,r;
    for(i=1;i<=lines;i++){
        k=1;
        r=0;
        for(j=1;j<=lines*2-1;j++){
            if(j>=lines+1-i && j<=lines-1+i){
                if(k){
                    printf("%d",combination(i-1,r++));
                }
                else
                {
                    printf(" ");
                }
                k=1-k;
            }
            else{
                printf(" ");
            }
        }
        printf("\n");
    }
}
int combination(int n,int r){
    int c=factorial(n)/(factorial(r)*factorial(n-r));
    return c;
}
int factorial(int n){
    int fact=1;
    if(fact==0)
        return 1;
    while(n){
        fact=fact*n;
        n--;
    }
    return fact;
}
int main(){
    int lines;
    printf("Enter number of lines:");
    scanf("%d",&lines);
    pattern(lines);
    return 0;
}
9. Write a function to print all Armstrong numbers between two given numbers. (TSRN) 
#include <stdio.h>
#include<math.h>
void print_armstrong(int,int);
void print_armstrong(int x,int l){
    while(x<=l){
        int y,count=0,temp=0;
        y=x;
        while(y){
            count++;
            y/=10;
        }
        y=x;
        for(int i=1;i<=count;i++){
            temp+=pow(y%10,count);
            y/=10;
        }
        if(x==temp){
            printf("%d ",temp);
        }
        x++;
    }
}
int main() {
    int x,l;
    printf("Enter starting number:");
    scanf("%d",&x);
    printf("Enter ending number:");
    scanf("%d",&l);
    print_armstrong(x,l);
    return 0;
}
10. Write a function to find the sum of first N terms of the series 1!/1+2!/2+3!/3+4!/4+5!/5…n!/n. (TSRS)
#include <stdio.h>
int series(int);
int factorial(int);
int factorial(int n){
    int fact=1;
    while(n){
        fact=fact*n;
        n--;
    }
    return fact;
}
int series(int n){
    int sum=0,i;
    for(i=1;i<=n;i++){
        sum=sum+factorial(i)/i;
    }
    return sum;
}
int main() {
    int n;
    printf("Enter a number:");
    scanf("%d",&n);
    printf("%d",series(n));
    return 0;
}
